// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterForm.vue should render correctly 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <div
        class="login-form-container"
      >
        <form>
          <div
            class="form-control"
          >
            <h2>
              Register
            </h2>
          </div>
          <div
            class="form-control"
          >
            <label
              for="email"
            >
              Email
            </label>
            <input
              id="email"
              name="email"
              placeholder="Enter email"
              required=""
              type="text"
            />
            <!--v-if-->
          </div>
          <div
            class="form-control"
          >
            <label
              for="password"
            >
              Password
            </label>
            <input
              id="password"
              minlength="7"
              name="password"
              placeholder="Enter password"
              required=""
              type="password"
            />
            <!--v-if-->
          </div>
          <div
            class="form-control"
          >
            <button>
              Sign up
            </button>
          </div>
          <response-error-message-stub
            errormessage="There was an error registering your account details."
            toggle="false"
          />
        </form>
      </div>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
        },
        "transition-group": Object {
          "name": "transition-group",
        },
      },
      "config": Object {
        "compilerOptions": Object {},
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "emitsCache": WeakMap {},
      "mixins": Array [
        Object {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": Object {},
      "reload": [Function],
    },
    "_instance": Object {
      "a": null,
      "accessCache": Object {},
      "appContext": Object {
        "app": [Circular],
        "components": Object {
          "transition": Object {
            "name": "transition",
          },
          "transition-group": Object {
            "name": "transition-group",
          },
        },
        "config": Object {
          "compilerOptions": Object {},
          "errorHandler": undefined,
          "globalProperties": Object {},
          "isNativeTag": [Function],
          "optionMergeStrategies": Object {},
          "performance": false,
          "warnHandler": undefined,
        },
        "directives": Object {},
        "emitsCache": WeakMap {},
        "mixins": Array [
          Object {
            "beforeCreate": [Function],
          },
        ],
        "optionsCache": WeakMap {},
        "propsCache": WeakMap {},
        "provides": Object {},
        "reload": [Function],
      },
      "asyncDep": null,
      "asyncResolved": false,
      "attrs": Object {},
      "bc": null,
      "bm": null,
      "bu": null,
      "bum": null,
      "c": null,
      "components": null,
      "ctx": Object {},
      "da": null,
      "data": Object {},
      "directives": null,
      "ec": null,
      "effect": ReactiveEffect {
        "active": true,
        "allowRecurse": true,
        "deps": Array [
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
        ],
        "fn": [Function],
        "onTrack": undefined,
        "onTrigger": undefined,
        "scheduler": [Function],
      },
      "emit": [Function],
      "emitsOptions": null,
      "emitted": null,
      "exposeProxy": null,
      "exposed": null,
      "inheritAttrs": undefined,
      "isDeactivated": false,
      "isMounted": true,
      "isUnmounted": false,
      "m": null,
      "next": null,
      "parent": null,
      "props": Object {},
      "propsDefaults": Object {},
      "propsOptions": Array [
        Object {},
        Array [],
      ],
      "provides": Object {},
      "proxy": Object {},
      "refs": Object {
        "VTU_COMPONENT": Object {
          "email": "",
          "errorMessage": "There was an error registering your account details.",
          "formTitle": "Register",
          "hasOwnProperty": [Function],
          "hideErrorMessage": [Function],
          "invalidRegistration": false,
          "password": "",
          "submitForm": [Function],
          "userService": UserService {
            "baseUrl": undefined,
          },
          "validEmail": false,
          "validPassword": false,
        },
      },
      "render": [Function],
      "renderCache": Array [],
      "root": [Circular],
      "rtc": null,
      "rtg": null,
      "scope": EffectScope {
        "active": true,
        "cleanups": Array [],
        "effects": Array [
          ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "scheduler": [Function],
          },
        ],
      },
      "setupContext": null,
      "setupState": Object {},
      "slots": Object {},
      "sp": null,
      "subTree": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": null,
        "children": null,
        "component": Object {
          "a": null,
          "accessCache": Object {
            "@@__IMMUTABLE_ITERABLE__@@": 0,
            "@@__IMMUTABLE_RECORD__@@": 0,
            "_isMockFunction": 0,
            "constructor": 0,
            "email": 2,
            "errorMessage": 2,
            "formTitle": 2,
            "hasOwnProperty": 4,
            "hideErrorMessage": 4,
            "invalidRegistration": 2,
            "isVueInstance": 0,
            "password": 2,
            "submitForm": 4,
            "toJSON": 0,
            "userService": 3,
            "validEmail": 4,
            "validPassword": 4,
            Symbol(Symbol.toStringTag): 0,
          },
          "appContext": Object {
            "app": [Circular],
            "components": Object {
              "transition": Object {
                "name": "transition",
              },
              "transition-group": Object {
                "name": "transition-group",
              },
            },
            "config": Object {
              "compilerOptions": Object {},
              "errorHandler": undefined,
              "globalProperties": Object {},
              "isNativeTag": [Function],
              "optionMergeStrategies": Object {},
              "performance": false,
              "warnHandler": undefined,
            },
            "directives": Object {},
            "emitsCache": WeakMap {},
            "mixins": Array [
              Object {
                "beforeCreate": [Function],
              },
            ],
            "optionsCache": WeakMap {},
            "propsCache": WeakMap {},
            "provides": Object {},
            "reload": [Function],
          },
          "asyncDep": null,
          "asyncResolved": false,
          "attrs": Object {},
          "bc": null,
          "bm": null,
          "bu": null,
          "bum": null,
          "c": null,
          "components": Object {
            "ResponseErrorMessage": Object {
              "data": [Function],
              "methods": Object {
                "hideErrorMessage": [Function],
              },
              "props": Object {
                "errorMessage": Object {
                  "0": false,
                  "1": true,
                  "type": [Function],
                },
                "toggle": Object {
                  "0": true,
                  "1": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
          },
          "ctx": Object {
            "email": "",
            "errorMessage": "There was an error registering your account details.",
            "formTitle": "Register",
            "hasOwnProperty": [Function],
            "hideErrorMessage": [Function],
            "invalidRegistration": false,
            "password": "",
            "submitForm": [Function],
            "userService": UserService {
              "baseUrl": undefined,
            },
            "validEmail": false,
            "validPassword": false,
          },
          "da": null,
          "data": Object {
            "email": "",
            "errorMessage": "There was an error registering your account details.",
            "formTitle": "Register",
            "invalidRegistration": false,
            "password": "",
          },
          "directives": null,
          "ec": null,
          "effect": ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
                ReactiveEffect {
                  "active": true,
                  "deps": Array [
                    [Circular],
                  ],
                  "fn": [Function],
                  "scheduler": [Function],
                },
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
                ReactiveEffect {
                  "active": true,
                  "deps": Array [
                    [Circular],
                  ],
                  "fn": [Function],
                  "scheduler": [Function],
                },
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "scheduler": [Function],
          },
          "emit": [Function],
          "emitsOptions": null,
          "emitted": null,
          "exposeProxy": null,
          "exposed": null,
          "inheritAttrs": undefined,
          "isDeactivated": false,
          "isMounted": true,
          "isUnmounted": false,
          "m": null,
          "next": null,
          "parent": [Circular],
          "props": Object {
            "userService": UserService {
              "baseUrl": undefined,
            },
          },
          "propsDefaults": Object {},
          "propsOptions": Array [
            Object {
              "userService": Object {
                "0": false,
                "1": true,
                "default": UserService {
                  "baseUrl": undefined,
                },
              },
            },
            Array [
              "userService",
            ],
          ],
          "provides": Object {},
          "proxy": Object {
            "email": "",
            "errorMessage": "There was an error registering your account details.",
            "formTitle": "Register",
            "hasOwnProperty": [Function],
            "hideErrorMessage": [Function],
            "invalidRegistration": false,
            "password": "",
            "submitForm": [Function],
            "userService": UserService {
              "baseUrl": undefined,
            },
            "validEmail": false,
            "validPassword": false,
          },
          "refs": Object {},
          "render": [Function],
          "renderCache": Array [
            [Function],
            [Function],
            [Function],
          ],
          "root": [Circular],
          "rtc": null,
          "rtg": null,
          "scope": EffectScope {
            "active": true,
            "cleanups": Array [],
            "effects": Array [
              ReactiveEffect {
                "active": true,
                "deps": Array [
                  Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        [Circular],
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                          ReactiveEffect {
                            "active": true,
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "scheduler": [Function],
                          },
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "scheduler": [Function],
                    },
                    [Circular],
                  },
                ],
                "fn": [Function],
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "deps": Array [
                  Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                          ReactiveEffect {
                            "active": true,
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "scheduler": [Function],
                          },
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "scheduler": [Function],
                    },
                    [Circular],
                  },
                ],
                "fn": [Function],
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "allowRecurse": true,
                "deps": Array [
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                    ReactiveEffect {
                      "active": true,
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "scheduler": [Function],
                    },
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                    ReactiveEffect {
                      "active": true,
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "scheduler": [Function],
                    },
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "onTrack": undefined,
                "onTrigger": undefined,
                "scheduler": [Function],
              },
            ],
          },
          "setupContext": null,
          "setupState": Object {},
          "slots": Object {},
          "sp": null,
          "subTree": Object {
            "__v_isVNode": true,
            "__v_skip": true,
            "anchor": null,
            "appContext": null,
            "children": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Register",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <h2>
                          Register
                        </h2>,
                        "key": null,
                        "patchFlag": 1,
                        "props": null,
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "h2",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="form-control"
                    >
                      <h2>
                        Register
                      </h2>
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "form-control",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Email",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <label
                          for="email"
                        >
                          Email
                        </label>,
                        "key": null,
                        "patchFlag": -1,
                        "props": Object {
                          "for": "email",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "label",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": Array [
                          Object {
                            "arg": undefined,
                            "dir": Object {
                              "beforeUpdate": [Function],
                              "created": [Function],
                              "mounted": [Function],
                            },
                            "instance": Object {
                              "email": "",
                              "errorMessage": "There was an error registering your account details.",
                              "formTitle": "Register",
                              "hasOwnProperty": [Function],
                              "hideErrorMessage": [Function],
                              "invalidRegistration": false,
                              "password": "",
                              "submitForm": [Function],
                              "userService": UserService {
                                "baseUrl": undefined,
                              },
                              "validEmail": false,
                              "validPassword": false,
                            },
                            "modifiers": Object {},
                            "oldValue": undefined,
                            "value": "",
                          },
                        ],
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <input
                          id="email"
                          name="email"
                          placeholder="Enter email"
                          required=""
                          type="text"
                        />,
                        "key": null,
                        "patchFlag": 512,
                        "props": Object {
                          "id": "email",
                          "name": "email",
                          "onUpdate:modelValue": [Function],
                          "placeholder": "Enter email",
                          "required": "",
                          "type": "text",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "input",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "v-if",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": Array [],
                        "dynamicProps": null,
                        "el": <!--v-if-->,
                        "key": null,
                        "patchFlag": 0,
                        "props": null,
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 8,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": Symbol(Comment),
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="form-control"
                    >
                      <label
                        for="email"
                      >
                        Email
                      </label>
                      <input
                        id="email"
                        name="email"
                        placeholder="Enter email"
                        required=""
                        type="text"
                      />
                      <!--v-if-->
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "form-control",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Password",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <label
                          for="password"
                        >
                          Password
                        </label>,
                        "key": null,
                        "patchFlag": -1,
                        "props": Object {
                          "for": "password",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "label",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": Array [
                          Object {
                            "arg": undefined,
                            "dir": Object {
                              "beforeUpdate": [Function],
                              "created": [Function],
                              "mounted": [Function],
                            },
                            "instance": Object {
                              "email": "",
                              "errorMessage": "There was an error registering your account details.",
                              "formTitle": "Register",
                              "hasOwnProperty": [Function],
                              "hideErrorMessage": [Function],
                              "invalidRegistration": false,
                              "password": "",
                              "submitForm": [Function],
                              "userService": UserService {
                                "baseUrl": undefined,
                              },
                              "validEmail": false,
                              "validPassword": false,
                            },
                            "modifiers": Object {},
                            "oldValue": undefined,
                            "value": "",
                          },
                        ],
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <input
                          id="password"
                          minlength="7"
                          name="password"
                          placeholder="Enter password"
                          required=""
                          type="password"
                        />,
                        "key": null,
                        "patchFlag": 512,
                        "props": Object {
                          "id": "password",
                          "minlength": "7",
                          "name": "password",
                          "onUpdate:modelValue": [Function],
                          "placeholder": "Enter password",
                          "required": "",
                          "type": "password",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "input",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "v-if",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": Array [],
                        "dynamicProps": null,
                        "el": <!--v-if-->,
                        "key": null,
                        "patchFlag": 0,
                        "props": null,
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 8,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": Symbol(Comment),
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="form-control"
                    >
                      <label
                        for="password"
                      >
                        Password
                      </label>
                      <input
                        id="password"
                        minlength="7"
                        name="password"
                        placeholder="Enter password"
                        required=""
                        type="password"
                      />
                      <!--v-if-->
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "form-control",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Sign up",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <button>
                          Sign up
                        </button>,
                        "key": null,
                        "patchFlag": 0,
                        "props": null,
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "button",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="form-control"
                    >
                      <button>
                        Sign up
                      </button>
                    </div>,
                    "key": null,
                    "patchFlag": -1,
                    "props": Object {
                      "class": "form-control",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {},
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onHideErrorMessage": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "errorMessage": "There was an error registering your account details.",
                        "toggle": false,
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {
                        "errorMessage": "There was an error registering your account details.",
                        "toggle": false,
                      },
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {
                          "errorMessage": Object {
                            "0": false,
                            "1": true,
                            "type": [Function],
                          },
                          "toggle": Object {
                            "0": true,
                            "1": true,
                            "type": [Function],
                          },
                        },
                        Array [
                          "toggle",
                        ],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "errorMessage": "There was an error registering your account details.",
                        "toggle": false,
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": null,
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <response-error-message-stub
                          errormessage="There was an error registering your account details."
                          toggle="false"
                        />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "errorMessage": "There was an error registering your account details.",
                          "onHideErrorMessage": [Function],
                          "toggle": false,
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "response-error-message-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "compatConfig": Object {
                          "MODE": 3,
                          "RENDER_FUNCTION": false,
                        },
                        "name": "ResponseErrorMessage",
                        "props": Object {
                          "errorMessage": Object {
                            "0": false,
                            "1": true,
                            "type": [Function],
                          },
                          "toggle": Object {
                            "0": true,
                            "1": true,
                            "type": [Function],
                          },
                        },
                        "render": [Function],
                      },
                      "u": null,
                      "uid": 2,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "toggle",
                      "errorMessage",
                      "onHideErrorMessage",
                    ],
                    "el": <response-error-message-stub
                      errormessage="There was an error registering your account details."
                      toggle="false"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "errorMessage": "There was an error registering your account details.",
                      "onHideErrorMessage": [Function],
                      "toggle": false,
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "compatConfig": Object {
                        "MODE": 3,
                        "RENDER_FUNCTION": false,
                      },
                      "name": "ResponseErrorMessage",
                      "props": Object {
                        "errorMessage": Object {
                          "0": false,
                          "1": true,
                          "type": [Function],
                        },
                        "toggle": Object {
                          "0": true,
                          "1": true,
                          "type": [Function],
                        },
                      },
                      "render": [Function],
                    },
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <form>
                  <div
                    class="form-control"
                  >
                    <h2>
                      Register
                    </h2>
                  </div>
                  <div
                    class="form-control"
                  >
                    <label
                      for="email"
                    >
                      Email
                    </label>
                    <input
                      id="email"
                      name="email"
                      placeholder="Enter email"
                      required=""
                      type="text"
                    />
                    <!--v-if-->
                  </div>
                  <div
                    class="form-control"
                  >
                    <label
                      for="password"
                    >
                      Password
                    </label>
                    <input
                      id="password"
                      minlength="7"
                      name="password"
                      placeholder="Enter password"
                      required=""
                      type="password"
                    />
                    <!--v-if-->
                  </div>
                  <div
                    class="form-control"
                  >
                    <button>
                      Sign up
                    </button>
                  </div>
                  <response-error-message-stub
                    errormessage="There was an error registering your account details."
                    toggle="false"
                  />
                </form>,
                "key": null,
                "patchFlag": 32,
                "props": Object {
                  "onSubmit": [Function],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "form",
              },
            ],
            "component": null,
            "dirs": null,
            "dynamicChildren": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "Register",
                "component": null,
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <h2>
                  Register
                </h2>,
                "key": null,
                "patchFlag": 1,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 9,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "h2",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": null,
                "dirs": Array [
                  Object {
                    "arg": undefined,
                    "dir": Object {
                      "beforeUpdate": [Function],
                      "created": [Function],
                      "mounted": [Function],
                    },
                    "instance": Object {
                      "email": "",
                      "errorMessage": "There was an error registering your account details.",
                      "formTitle": "Register",
                      "hasOwnProperty": [Function],
                      "hideErrorMessage": [Function],
                      "invalidRegistration": false,
                      "password": "",
                      "submitForm": [Function],
                      "userService": UserService {
                        "baseUrl": undefined,
                      },
                      "validEmail": false,
                      "validPassword": false,
                    },
                    "modifiers": Object {},
                    "oldValue": undefined,
                    "value": "",
                  },
                ],
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <input
                  id="email"
                  name="email"
                  placeholder="Enter email"
                  required=""
                  type="text"
                />,
                "key": null,
                "patchFlag": 512,
                "props": Object {
                  "id": "email",
                  "name": "email",
                  "onUpdate:modelValue": [Function],
                  "placeholder": "Enter email",
                  "required": "",
                  "type": "text",
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 1,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "input",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "v-if",
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [],
                "dynamicProps": null,
                "el": <!--v-if-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(Comment),
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": null,
                "dirs": Array [
                  Object {
                    "arg": undefined,
                    "dir": Object {
                      "beforeUpdate": [Function],
                      "created": [Function],
                      "mounted": [Function],
                    },
                    "instance": Object {
                      "email": "",
                      "errorMessage": "There was an error registering your account details.",
                      "formTitle": "Register",
                      "hasOwnProperty": [Function],
                      "hideErrorMessage": [Function],
                      "invalidRegistration": false,
                      "password": "",
                      "submitForm": [Function],
                      "userService": UserService {
                        "baseUrl": undefined,
                      },
                      "validEmail": false,
                      "validPassword": false,
                    },
                    "modifiers": Object {},
                    "oldValue": undefined,
                    "value": "",
                  },
                ],
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <input
                  id="password"
                  minlength="7"
                  name="password"
                  placeholder="Enter password"
                  required=""
                  type="password"
                />,
                "key": null,
                "patchFlag": 512,
                "props": Object {
                  "id": "password",
                  "minlength": "7",
                  "name": "password",
                  "onUpdate:modelValue": [Function],
                  "placeholder": "Enter password",
                  "required": "",
                  "type": "password",
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 1,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "input",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "v-if",
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [],
                "dynamicProps": null,
                "el": <!--v-if-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(Comment),
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "errorMessage": 3,
                    "isVueInstance": 0,
                    "toJSON": 0,
                    "toggle": 3,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {
                    "onHideErrorMessage": [Function],
                  },
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {
                    "errorMessage": "There was an error registering your account details.",
                    "toggle": false,
                  },
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {
                    "errorMessage": "There was an error registering your account details.",
                    "toggle": false,
                  },
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {
                      "errorMessage": Object {
                        "0": false,
                        "1": true,
                        "type": [Function],
                      },
                      "toggle": Object {
                        "0": true,
                        "1": true,
                        "type": [Function],
                      },
                    },
                    Array [
                      "toggle",
                    ],
                  ],
                  "provides": Object {},
                  "proxy": Object {
                    "errorMessage": "There was an error registering your account details.",
                    "toggle": false,
                  },
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": null,
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <response-error-message-stub
                      errormessage="There was an error registering your account details."
                      toggle="false"
                    />,
                    "key": null,
                    "patchFlag": 16,
                    "props": Object {
                      "errorMessage": "There was an error registering your account details.",
                      "onHideErrorMessage": [Function],
                      "toggle": false,
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "response-error-message-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "compatConfig": Object {
                      "MODE": 3,
                      "RENDER_FUNCTION": false,
                    },
                    "name": "ResponseErrorMessage",
                    "props": Object {
                      "errorMessage": Object {
                        "0": false,
                        "1": true,
                        "type": [Function],
                      },
                      "toggle": Object {
                        "0": true,
                        "1": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                  "u": null,
                  "uid": 2,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "toggle",
                  "errorMessage",
                  "onHideErrorMessage",
                ],
                "el": <response-error-message-stub
                  errormessage="There was an error registering your account details."
                  toggle="false"
                />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "errorMessage": "There was an error registering your account details.",
                  "onHideErrorMessage": [Function],
                  "toggle": false,
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "compatConfig": Object {
                    "MODE": 3,
                    "RENDER_FUNCTION": false,
                  },
                  "name": "ResponseErrorMessage",
                  "props": Object {
                    "errorMessage": Object {
                      "0": false,
                      "1": true,
                      "type": [Function],
                    },
                    "toggle": Object {
                      "0": true,
                      "1": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
              },
            ],
            "dynamicProps": null,
            "el": <div
              class="login-form-container"
            >
              <form>
                <div
                  class="form-control"
                >
                  <h2>
                    Register
                  </h2>
                </div>
                <div
                  class="form-control"
                >
                  <label
                    for="email"
                  >
                    Email
                  </label>
                  <input
                    id="email"
                    name="email"
                    placeholder="Enter email"
                    required=""
                    type="text"
                  />
                  <!--v-if-->
                </div>
                <div
                  class="form-control"
                >
                  <label
                    for="password"
                  >
                    Password
                  </label>
                  <input
                    id="password"
                    minlength="7"
                    name="password"
                    placeholder="Enter password"
                    required=""
                    type="password"
                  />
                  <!--v-if-->
                </div>
                <div
                  class="form-control"
                >
                  <button>
                    Sign up
                  </button>
                </div>
                <response-error-message-stub
                  errormessage="There was an error registering your account details."
                  toggle="false"
                />
              </form>
            </div>,
            "key": null,
            "patchFlag": 0,
            "props": Object {
              "class": "login-form-container",
            },
            "ref": null,
            "scopeId": null,
            "shapeFlag": 17,
            "slotScopeIds": null,
            "ssContent": null,
            "ssFallback": null,
            "staticCount": 0,
            "suspense": null,
            "target": null,
            "targetAnchor": null,
            "transition": null,
            "type": "div",
          },
          "suspense": null,
          "suspenseId": 0,
          "type": Object {
            "components": Object {
              "ResponseErrorMessage": Object {
                "data": [Function],
                "methods": Object {
                  "hideErrorMessage": [Function],
                },
                "props": Object {
                  "errorMessage": Object {
                    "0": false,
                    "1": true,
                    "type": [Function],
                  },
                  "toggle": Object {
                    "0": true,
                    "1": true,
                    "type": [Function],
                  },
                },
                "render": [Function],
              },
            },
            "computed": Object {
              "validEmail": [Function],
              "validPassword": [Function],
            },
            "data": [Function],
            "methods": Object {
              "hideErrorMessage": [Function],
              "submitForm": [Function],
            },
            "props": Object {
              "userService": Object {
                "0": false,
                "1": true,
                "default": UserService {
                  "baseUrl": undefined,
                },
              },
            },
            "render": [Function],
          },
          "u": null,
          "uid": 1,
          "um": null,
          "update": [Function],
          "vnode": [Circular],
          "withProxy": null,
        },
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": <div
          class="login-form-container"
        >
          <form>
            <div
              class="form-control"
            >
              <h2>
                Register
              </h2>
            </div>
            <div
              class="form-control"
            >
              <label
                for="email"
              >
                Email
              </label>
              <input
                id="email"
                name="email"
                placeholder="Enter email"
                required=""
                type="text"
              />
              <!--v-if-->
            </div>
            <div
              class="form-control"
            >
              <label
                for="password"
              >
                Password
              </label>
              <input
                id="password"
                minlength="7"
                name="password"
                placeholder="Enter password"
                required=""
                type="password"
              />
              <!--v-if-->
            </div>
            <div
              class="form-control"
            >
              <button>
                Sign up
              </button>
            </div>
            <response-error-message-stub
              errormessage="There was an error registering your account details."
              toggle="false"
            />
          </form>
        </div>,
        "key": null,
        "patchFlag": 0,
        "props": Object {
          "ref": "VTU_COMPONENT",
        },
        "ref": Object {
          "f": false,
          "i": [Circular],
          "k": undefined,
          "r": "VTU_COMPONENT",
        },
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "components": Object {
            "ResponseErrorMessage": Object {
              "data": [Function],
              "methods": Object {
                "hideErrorMessage": [Function],
              },
              "props": Object {
                "errorMessage": Object {
                  "0": false,
                  "1": true,
                  "type": [Function],
                },
                "toggle": Object {
                  "0": true,
                  "1": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
          },
          "computed": Object {
            "validEmail": [Function],
            "validPassword": [Function],
          },
          "data": [Function],
          "methods": Object {
            "hideErrorMessage": [Function],
            "submitForm": [Function],
          },
          "props": Object {
            "userService": Object {
              "0": false,
              "1": true,
              "default": UserService {
                "baseUrl": undefined,
              },
            },
          },
          "render": [Function],
        },
      },
      "suspense": null,
      "suspenseId": 0,
      "type": Object {
        "name": "VTU_ROOT",
        "render": [Function],
      },
      "u": null,
      "uid": 0,
      "um": null,
      "update": [Function],
      "vnode": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": Object {
          "app": [Circular],
          "components": Object {
            "transition": Object {
              "name": "transition",
            },
            "transition-group": Object {
              "name": "transition-group",
            },
          },
          "config": Object {
            "compilerOptions": Object {},
            "errorHandler": undefined,
            "globalProperties": Object {},
            "isNativeTag": [Function],
            "optionMergeStrategies": Object {},
            "performance": false,
            "warnHandler": undefined,
          },
          "directives": Object {},
          "emitsCache": WeakMap {},
          "mixins": Array [
            Object {
              "beforeCreate": [Function],
            },
          ],
          "optionsCache": WeakMap {},
          "propsCache": WeakMap {},
          "provides": Object {},
          "reload": [Function],
        },
        "children": null,
        "component": [Circular],
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": <div
          class="login-form-container"
        >
          <form>
            <div
              class="form-control"
            >
              <h2>
                Register
              </h2>
            </div>
            <div
              class="form-control"
            >
              <label
                for="email"
              >
                Email
              </label>
              <input
                id="email"
                name="email"
                placeholder="Enter email"
                required=""
                type="text"
              />
              <!--v-if-->
            </div>
            <div
              class="form-control"
            >
              <label
                for="password"
              >
                Password
              </label>
              <input
                id="password"
                minlength="7"
                name="password"
                placeholder="Enter password"
                required=""
                type="password"
              />
              <!--v-if-->
            </div>
            <div
              class="form-control"
            >
              <button>
                Sign up
              </button>
            </div>
            <response-error-message-stub
              errormessage="There was an error registering your account details."
              toggle="false"
            />
          </form>
        </div>,
        "key": null,
        "patchFlag": 0,
        "props": null,
        "ref": null,
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "name": "VTU_ROOT",
          "render": [Function],
        },
      },
      "withProxy": null,
    },
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": Object {
      "compilerOptions": Object {},
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.2.26",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "email": "",
    "errorMessage": "There was an error registering your account details.",
    "formTitle": "Register",
    "hasOwnProperty": [Function],
    "hideErrorMessage": [Function],
    "invalidRegistration": false,
    "password": "",
    "submitForm": [Function],
    "userService": UserService {
      "baseUrl": undefined,
    },
    "validEmail": false,
    "validPassword": false,
  },
  "isDisabled": [Function],
  "rootVM": Object {},
  "wrapperElement": <div
    class="login-form-container"
  >
    <form>
      <div
        class="form-control"
      >
        <h2>
          Register
        </h2>
      </div>
      <div
        class="form-control"
      >
        <label
          for="email"
        >
          Email
        </label>
        <input
          id="email"
          name="email"
          placeholder="Enter email"
          required=""
          type="text"
        />
        <!--v-if-->
      </div>
      <div
        class="form-control"
      >
        <label
          for="password"
        >
          Password
        </label>
        <input
          id="password"
          minlength="7"
          name="password"
          placeholder="Enter password"
          required=""
          type="password"
        />
        <!--v-if-->
      </div>
      <div
        class="form-control"
      >
        <button>
          Sign up
        </button>
      </div>
      <response-error-message-stub
        errormessage="There was an error registering your account details."
        toggle="false"
      />
    </form>
  </div>,
}
`;
